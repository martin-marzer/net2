@page "/titular/{Id:int?}"
@inject ObtenerTitularUseCase ObtenerTitularUseCase
@inject ModificarTitularUseCase ModificarTitularUseCase
@inject NavigationManager Navegador;
@inject AgregarTitularUseCase AgregarTitularUseCase

<PageTitle>Titular</PageTitle>

 <div>
    <a href="/titulares" style="text-decoration: none;color: black;">
            <span class="oi oi-arrow-thick-left"></span>
    </a>

    @if (esNuevoTitular)
    {
        <h3>Agregando un nuevo Titular</h3>
        <DialogoConfirmacion @ref="dialogo" OnConfirmado="Volver"/>
    }
    else
    {
        <h3>Modificando al Titular "@titular.Nombre"</h3>
        <DialogoConfirmacion @ref="dialogo" />
    }

    <EditForm Model="titular" OnValidSubmit="Aceptar" class="col-md-10">
        <DataAnnotationsValidator/>

        <div class="row">
            <div class="form-group col-md-6">
                <label for="apellido" class="col-md-2 col-form-label">Apellido:</label>
                <div class="col-md-10">
                    <InputText id="apellido" placeholder="Ramirez" class="form-control" @bind-Value="titular.Apellido" />
                    <ValidationMessage For="@(() => titular.Apellido)" />
                </div>
            </div>

            <div class="form-group col-md-6">
                <label for="nombre" class="col-md-2 col-form-label">Nombre:</label>
                <div class="col-md-10">
                    <InputText id="nombre" placeholder="MartÃ­n" class="form-control" @bind-Value="titular.Nombre" />
                    <ValidationMessage For="@(() => titular.Nombre)" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                <label for="dni" class="col-md-2 col-form-label">Dni:</label>
                <div class="col-md-10">
                    <InputText id="dni" placeholder="49666777"  class="form-control"   @bind-Value="titular.Dni" />
                    <ValidationMessage For="@(() => titular.Dni)" />
                </div>
            </div>

            <div class="form-group col-md-6">
                <label for="email" class="col-md-2 col-form-label">Email:</label>
                <div class="col-md-10">
                    <InputText id="email" placeholder="email123@gmail.com" class="form-control" @bind-Value="titular.Email" />
                    <ValidationMessage For="@(() => titular.Email)" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                <label for="telefono" class="col-md-2 col-form-label">telefono:</label>
                <div class="col-md-10">
                    <InputText id="telefono" placeholder="2298630992" class="form-control" @bind-Value="titular.Telefono" />
                    <ValidationMessage For="@(() => titular.Telefono)" />
                </div>
            </div>

            <div class="form-group col-md-6">
                <label for="direccion" class="col-md-2 col-form-label">Direccion:</label>
                <div class="col-md-10">
                    <InputText id="direccion" placeholder="casa 123" class="form-control" @bind-Value="titular.Direccion" />
                    <ValidationMessage For="@(() => titular.Direccion)" />
                </div>
            </div>
        </div>



        @* <div class="form-group row"> <label for="message" class="col-md-2 col-form-label">mensaje:</label>
            <div class="col-md-10"> 
                <InputTextArea rows="5" id="message" class="form-control" @bind-Value="_contact.Message" />
            </div>
        </div>  *@
        
        <button style="margin-top: 1rem;" class="btn btn-primary" type="submit" >Aceptar </button>
    </EditForm>

    @if (esInvalido){
         <p style="color:red" >@mensaje</p>
    }
    
</div> 

@code {
    Titular titular = new Titular();

    [Parameter] 
    public int? Id { get; set; }
    bool esNuevoTitular=true;
    protected override void OnParametersSet()
    {
        if (Id != null) {
            var titular_hallado = ObtenerTitularUseCase.Ejecutar(Id.Value);
            if (titular_hallado != null)
            {
                titular = titular_hallado;
                esNuevoTitular=false;
            }
        }
    }


    bool esInvalido = false;
    string mensaje = "";
    DialogoConfirmacion dialogo = null!;
    private async Task Aceptar()
    {
        if(esNuevoTitular) {
            try {
                AgregarTitularUseCase.Ejecutar(titular);
                titular = new Titular();
                esInvalido = false;
                await ConfirmarVolver(); //solo si se pudo agregar en la BD salta el mensaje
            }
            catch(Exception e){
                mensaje = e.Message;
                esInvalido = true;
            }
        } else {
            try {
                ModificarTitularUseCase.Ejecutar(titular);
                Navegador.NavigateTo("titulares");
            }
            catch(Exception e){
                esInvalido = true;
                mensaje = e.Message;
            }
        }

    }


    private async Task ConfirmarVolver()
    {
        dialogo.Mensaje = "se ha agregado correctamente el titular";
        await dialogo.Mostrar(true);
    }
    private void Volver()
    {
        Navegador.NavigateTo("titulares");
    }

}